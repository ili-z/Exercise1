<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
 PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!-- 引入database.properties文件 -->
	<properties resource="database.properties" />
	<settings>
		<setting name="logImpl" value="LOG4J" />
		<!-- 驼峰命名法 -->
		<!-- <setting name="mapUnderscoreToCamelCase" value="true"/> -->
		 <!-- 开启二级缓存配置 -->
		<setting name="cacheEnabled" value="true"/>
	</settings>
	
	<!-- typeAliases:别名处理器，为Java类型起别名
			别名不区分大小写
	 -->
	<typeAliases>
	<!-- typeAlias:别名处理器，可以为我们的Java类型起别名
			type:指定要起别名的类型的全类名，默认是类型小写；
			alias:指定新的别名
	-->
		<!-- <typeAlias type="cn.hfxt.entity.ATTENCE" alias="att" /> -->
	<!-- package:为某个包下的所有类批量起别名
			name:指定包名（为当前包以及下面所有的后代包的每一个类都起一个默认别名（类型小写））
	 -->
		<package name="cn.hfxt.entity" />
		<!-- 批量起别名的情况下，使用@Alias("")注解为某个类型指定新的别名 -->
	</typeAliases>
	
	<!-- environments:环境们， mybatis可以配置多种环境,default指定使用某种环境。可以快速切换环境
			environment:配置一个具体的环境信息，必须有两个标签，id表示当前环境的唯一标识
				transectionManager:事务管理器
					type:事务管理器的类型；JDBC/MANAGED
						自定义事务管理器；实现TransactionFactory接口，type指定为全类名
				dataSource:数据源；
					type:数据源类型；UNPOOLED/POOLED/JNDI
					自定义数据源：实现DataSourceFactory接口，type指定为全类名
	 -->
	<environments default="development">
		<environment id="development">
			<transactionManager type="JDBC"></transactionManager>
			<dataSource type="POOLED">
				<property name="driver" value="${driver}" />
				<property name="url" value="${url}" />
				<property name="username" value="${user}" />
				<property name="password" value="${password}" />
			</dataSource>
		</environment>
	</environments>
	
	<!-- 将mapper文件加入到配置文件中 -->
	<!-- mapper,将sql映射注册到全局配置中 -->
	<mappers>
		<mapper resource="cn/dao/Product_Category_Dao.xml" />
		<mapper resource="cn/dao/ProductionDao.xml" />
	</mappers>
</configuration>